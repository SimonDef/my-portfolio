{"version":3,"sources":["components/sidebar.jsx","components/profileButton.jsx","components/projects.jsx","components/experience.jsx","components/content.jsx","App.js","serviceWorker.js","index.js"],"names":["Sidebar","className","id","href","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Component","ProfileButton","current","this","props","active","getVariant","index","ButtonGroup","nameClass","size","ariaLabel","profiles","map","profile","Button","variant","key","onClick","Toggleprojects","state","dataDisplay","setState","currentState","feedback","buttonText","CardColumns","dataProject","project","Card","border","bg","text","Header","as","title","Body","detail","quote","Footer","ToggleButton","Experience","Row","Col","data","employer","city","country","date_start","date_end","duties","duty","keyword","includes","check","section","Content","handleClick","bind","newState","firstName","lastName","contact","street","zipCode","tel","email","resumeSummary","Container","resumeName","socialMedia","media","URL","icon","class","experiences","experience","projects","education","degree","institution","major","startDate","endDate","coreSubjects","join","certification","certif","certificate","training","style","padding","margin","viewBoxSize","center","paddingAngle","lineWidth","totalValue","radius","startAngle","label","dataEntry","value","labelStyle","fontSize","labelPosition","expertises","toolsSet","toolSet","devTools","devTool","languages","language","name","ProgressBar","animated","inprogress","now","level","interests","volunteering","App","Data","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.38ee5900.chunk.js","sourcesContent":["import React, { Component } from 'react'\n// import ProfileButton from './profileButton.jsx'\n\n\nconst imgProfile = \"img/profile.png\";\n\nexport default class Sidebar extends Component {\n    // constructor() {\n    //     super();\n    //     this.state = {\n    //         active:0,\n    //     };\n    //     this.handleClick = this.handleClick.bind(this);\n    //   }\n\n    // handleClick(index) {\n    //     const newState = this.state.active === index ? true : index;\n    //     this.setState({active: newState});\n    // }\n\n    render() {\n      return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" id=\"sideNav\">\n                <a className=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">\n                    <span className=\"d-block d-lg-none\">Simon Defrenet</span>\n                    <span className=\"d-none d-lg-block\">\n                        <img className=\"img-fluid img-profile rounded-circle mx-auto mb-2\" src={imgProfile} alt=\"\" />\n                    </span>\n                </a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\" />\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link js-scroll-trigger\" href=\"#about\">About</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link js-scroll-trigger\" href=\"#experience\">Experience</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link js-scroll-trigger\" href=\"#education\">Education</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link js-scroll-trigger\" href=\"#skills\">Skills</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link js-scroll-trigger\" href=\"#interests\">Interests</a>\n                        </li>\n    </ul>\n                </div>\n                {/* <div className=\"collapse navbar-collapse\">\n                    <ProfileButton \n                    profiles={this.props.data.profiles} \n                    onClick={this.handleClick} \n                    active={this.state.active}\n                    nameClass=\"btn-sm\" \n                    size=\"sm\" \n                    ariaLabel=\"Nav\"\n                    >\n                                </ProfileButton>\n                </div> */}\n            </nav>\n        </div>\n      )\n    }\n}","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/button'\nimport ButtonGroup from 'react-bootstrap/buttongroup'\n\nexport default class ProfileButton extends Component {\n    render() {\n    var current = this.props.active; \n    var getVariant = function(index) {\n      if ( index === current )\n        return \"primary\";\n      return \"secondary\";\n     };\n    return (\n        <ButtonGroup \n            className={this.props.nameClass}\n            size={this.props.size} \n            aria-label={this.props.ariaLabel}>\n            {this.props.profiles.map ((profile, index) =>\n            <Button \n                href=\"#experience\"\n                variant={getVariant(index)}\n                key={index}\n                onClick={() => this.props.onClick(index)}\n                >\n                    {profile}\n            </Button>\n            )}\n    </ButtonGroup>\n    );\n  }\n}","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/button'\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport Card from 'react-bootstrap/Card'\n\nexport default class Toggleprojects extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            dataDisplay: false,\n        }\n    }\n\n    ToggleButton(){\n        this.setState((currentState) => ({\n            dataDisplay: !currentState.dataDisplay, \n        }));\n    }\n    \n    render() {\n      const isActive=this.state.dataDisplay;\n      let feedback;\n      let buttonText;\n      if (isActive) {      \n            feedback = <CardColumns className=\"\">\n                {this.props.dataProject.map ((project, index) =>\n                <Card key={\"xp_project_\"+index} border=\"light\" bg=\"light\" text=\"dark\">\n                    <Card.Header as=\"h6\">{project.title}</Card.Header>\n                    <Card.Body>{project.detail}</Card.Body>\n                    {this.props.quote ? \n                    <Card.Footer>\n                        <small className=\"text-muted\">{project.quote}</small>\n                    </Card.Footer>\n                    : null}\n                </Card>\n            )}\n        </CardColumns>;\n            buttonText=\"Hide projects details\";\n        } else {      \n            buttonText=\"See projects details\";\n        }\n      return (\n        <div id={\"xp_projects\"+this.props.index}>\n            <Button onClick={ () => this.ToggleButton() } variant=\"light\">\n                {buttonText} \n            </Button>\n            {feedback}\n        </div>      \n    );\n  }\n}","import React, { Component } from 'react'\nimport Col from 'react-bootstrap/col'\nimport Row from 'react-bootstrap/row'\n\nexport default class Experience extends Component {\n\n    render() {\n      return (\n        <div>\n            <Row>\n                <Col className=\"resume-content\">\n                    <h3>{this.props.data.title}</h3>\n                    <div className=\"subheading mb-2\">{this.props.data.employer}, {this.props.data.city}, {this.props.data.country}</div>\n                 </Col>\n                <Col className=\"resume-date text-md-right\">\n                    <span className=\"text-primary\">{this.props.data.date_start} - {this.props.data.date_end}</span>\n                </Col>\n            </Row>\n            <Row className=\"mb-3\">\n                <ul>\n                     {this.props.data.duties.map ((duty, index) =>\n                        { if (duty.keyword.includes(this.props.check)) {\n                                return (\n                                    <div key={this.props.data.section+\"_d_\"+index}>{duty.detail}</div> \n                                );\n                            }\n                        }\n                    )}\n                </ul>\n            </Row>\n        </div>\n      )\n    }\n}","import React, { Component } from 'react'\nimport Col from 'react-bootstrap/col'\nimport Row from 'react-bootstrap/row'\nimport Container from 'react-bootstrap/container'\nimport Button from 'react-bootstrap/button'\nimport ProfileButton from './profileButton.jsx'\nimport Toggleprojects from './projects.jsx'\nimport Experience from './experience.jsx'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport { PieChart } from 'react-minimal-pie-chart'\n\nfunction isEven(value) {\n    if (value%2 === 0)\n        return true;\n    else\n        return false;\n}\n\nexport default class Content extends Component {\n    constructor() {\n        super();\n        this.state = {\n            active:0,\n        };\n        this.handleClick = this.handleClick.bind(this);\n      }\n\n    handleClick(index) {\n        const newState = this.state.active === index ? true : index;\n        this.setState({active: newState});\n    }\n    \n    render() {\n      return (\n        <div className=\"container-fluid p-0\">\n            <section className=\"resume-section p-3 p-lg-5 d-flex align-items-center\" id=\"about\">\n                <div className=\"w-100\">\n                    <h1 className=\"mb-0\">{this.props.data.firstName}\n                        <span className=\"text-primary\"> {this.props.data.lastName}</span>\n                    </h1>\n                    <div className=\"subheading mb-4\">{this.props.data.contact.street} · {this.props.data.contact.city}, {this.props.data.contact.zipCode} · {this.props.data.contact.tel} ·\n                        <a href=\"mailto:simon.defrenet@gmail.com\"> {this.props.data.contact.email}</a>\n                    </div>\n                    <p className=\"lead mb-4\">{this.props.data.resumeSummary}</p>\n                    <div>\n                        <Container>\n                            <Row><Col className=\"mb-5\">\n                                    <Button variant=\"outline-secondary\" href={this.props.data.resumeName}> <i className=\"fa fa-download\"/> Download my resume</Button>\n                                </Col></Row>\n                            <Row><Col className=\"social-icons mb-5\">\n                                        {this.props.data.socialMedia.map ((media, index) =>\n                                            <a key = {index} className=\"social-icons\" href={media.URL}>\n                                                <i className={media.icon} />\n                                            </a>\n                                        )}\n                                </Col></Row>\n                            <Row>\n                                <Button variant=\"light\" className=\"btn btn-default btn-lg btn-block\" href=\"#experience\">\n                                    <a href=\"#experience\"> <i class=\"fas fa-arrow-down\"></i></a>\n                                </Button>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            </section>\n            \n            <section className=\"resume-section p-3 p-lg-5 d-flex justify-content-center\" id=\"experience\">\n                <div className=\"w-100\">\n                    <ProfileButton profiles={this.props.data.profiles} \n                            onClick={this.handleClick} \n                            active={this.state.active}\n                            nameClass=\"btn-sm\" \n                            size=\"lg\" \n                            ariaLabel=\"Profiles\">\n                            </ProfileButton>\n                    <div className=\"mb-5\"></div>\n                    <h2 className=\"mb-4\">Experience</h2>\n                    <ul>\n                        {this.props.data.experiences.map ((experience, index) =>\n                            <li key={\"xp\"+index} className=\"resume-item d-flex flex-column justify-content-between mb-3\"> \n                                <Experience data={experience} index={index} section=\"experience\" check={this.props.data.profiles[this.state.active]}></Experience>\n                                <Toggleprojects className=\"mb-3\" index={index} dataProject={experience.projects}></Toggleprojects>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n            </section>\n        \n            <section className=\"resume-section p-3 p-lg-5 d-flex align-items-center\" id=\"education\">\n                <div className=\"w-100\">\n                    <h2 className=\"mb-4\">Education</h2>\n                    <h3 className=\"mb-2\">Degrees</h3>\n                    <ul className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-3\">\n                      {this.props.data.education.map ((degree, index) =>\n                        <Row key={\"degree\"+index} className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-3\">\n                            <div className=\"resume-content\">\n                                <h4 className=\"mb-0\">{degree.institution}</h4>\n                                <div className=\"subheading mb-2\">{degree.type}, {degree.city}, {degree.country}</div>\n                                <h5 className=\"mb-0\">{degree.degree}</h5>\n                                <div>{degree.major}</div>\n                            </div>\n                            <div className=\"resume-date text-md-right\">\n                                <span className=\"text-primary\">{degree.startDate} - {degree.endDate}</span>\n                            </div>\n                            <p>Core subjects: {degree.coreSubjects.join(\", \")}</p>\n                      </Row>\n                      )\n                    }\n                    </ul>\n                    <h3 className=\"mb-2\">Certifications</h3>\n                    <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-3\">\n                      <ul>\n                        {this.props.data.certification.map ((certif, index) =>\n                        <div key={\"certif\"+index}>{certif.certificate} · {certif.institution}</div>\n                        )}\n                      </ul>\n                    </div>\n                    \n                    <h3 className=\"mb-2\">Trainings</h3>\n                    <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-3\">\n                      <ul>\n                        {this.props.data.training.map ((training, index) =>\n                        <div key={\"training\"+index}>{training.certificate} · {training.institution}</div>\n                        )}\n                      </ul>\n                    </div>\n                   \n                   </div>\n            </section>\n        \n            <section className=\"resume-section p-3 p-lg-5 d-flex align-items-center\" id=\"skills\">\n                <div className=\"w-100\">\n                    <h2 className=\"mb-4\">Skills</h2>\n                    <div className=\"resume-item d-flex flex-column flex-md-row justify-content-between mb-3\">\n                        <Row>\n                            <Col className=\"resume-content subheading\">\n                                <h3 className=\"mb-3\">Expertise </h3>\n                                <PieChart style={{border:'none !important', padding:'none!important' , margin:'none!important'}} \n                                    viewBoxSize={[45,18]} center={[20,5]} \n                                    paddingAngle=\"5\" lineWidth=\"25\" totalValue=\"100\" radius=\"6\" startAngle={0}\n                                    label={({ dataEntry }) => dataEntry.title + '\\n' + dataEntry.value + \"%\"} labelStyle={{fontSize:'0.1rem'}} labelPosition=\"110\" \n                                    data={this.props.data.expertises} />\n                            </Col>\n                            <Col className=\"resume-content\">\n                                <h3 className=\"mb-3\">Tools</h3>\n                                <ul>\n                                    {this.props.data.toolsSet.map ((toolSet, index) =>\n                                        <div key = {'toolSet'+index}> {toolSet}</div>\n                                    )}\n                                </ul>\n                            </Col>\n                        </Row>\n                    </div>\n\n                    <h3 className=\"mb-3\">Programming Languages &amp; Tools</h3>\n                       <ul className=\"dev-icons mb-3\">\n                           {this.props.data.devTools.map ((devTool, index) =>\n                             <li className=\"list-inline-item\">\n                                <i className={\"fab fa-\"+devTool}/>\n                             </li>\n                           )}\n                        </ul>\n                        \n                    <h3 className=\"mb-3\">Languages</h3>\n                    <ul className=\"fa-ul\">\n                        {this.props.data.languages.map ((language, index) =>\n                            <li key={\"language_\"+index}> {language.name} \n                            <ProgressBar animated={language.inprogress} id={isEven(index) ? \"evenbar\" : \"oddbar\"} now={language.level} />\n                          </li>\n                        )\n                        }\n                    </ul>\n                </div>\n            </section>\n        \n            <section className=\"resume-section p-3 p-lg-5 justify-content-center\" id=\"interests\">\n                <div className=\"w-100\">\n                    <h2 className=\"mb-3\">Interests</h2>\n                    <p>{this.props.data.interests}</p>\n                    <br/>\n                    <h3 className=\"mb-4\">Volunteering</h3>\n                    <ul>\n                        {this.props.data.volunteering.map ((experience, index) =>\n                            <li key={\"volunteering_\"+index} className=\"resume-item d-flex flex-column justify-content-between mb-3\"> \n                                <Experience data={experience} index={index} section=\"Volunteering\" check={this.props.data.profiles[this.state.active]}></Experience>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n\n            </section>\n           \n            <div>      \n                    <Button variant=\"light\" className=\"btn btn-default btn-lg\" href=\"#experience\">\n                                    <i class=\"fas fa-arrow-up\"></i>\n                                </Button>\n                </div>        \n\n        </div>\n        )\n    }   \n}","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/sidebar'\nimport Content from './components/content'\n// import About from './components/about'\n// import Experience from './components/experience'\n// import Education from './components/education'\n// import Skills from './components/skills'\n// import Interests from './components/interests'\nimport Data from './resume.json'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Sidebar></Sidebar>\n        <Content data={Data}></Content>\n        {/* <div className=\"container-fluid p-0\">\n          <About firstName={Data.firstName} \n            lastName={Data.lastName} \n            contact={Data.contact}\n            profiles={Data.profiles}\n            resumeName={Data.resumeName}\n            resumeSummary={Data.resumeSummary}\n            socialMedia={Data.socialMedia}>\n          </About>\n          <Experience experiences={Data.experiences} ></Experience>\n          <Education education={Data.education} trainings={Data.training} certifications={Data.certification}></Education>\n          <Skills expertises={Data.expertises} toolsSet={Data.toolsSet} devTools={Data.devTools} languages={Data.languages}></Skills>\n          <Interests volunteering={Data.volunteering} interests={Data.interests}></Interests>\n        </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}